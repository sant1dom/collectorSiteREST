openapi: 3.0.3
info:
  title: Collector Site
  version: 1.0.0
servers:
  - url: http://localhost:8080/collectorSite
paths:
  #1
  '/rest/auth/login':
    post:
      operationId: doLogin
      tags:
        - autenticazione
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: successful login
          content:
            text/plain:
              schema:
                type: string
          headers:
            Authorization:
              schema:
                type: string
                pattern: 'Bearer [a-z0-9A-Z-]+'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/GeneralError'
  '/rest/auth/logout':
    delete:
      operationId: doLogout
      tags:
        - autenticazione
      security:
        - bearerAuth: [ ]
      responses:
        '200':
          description: successful logout
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/GeneralError'
  #2
  '/rest/collezioni/all':
    get:
      operationId: getCollezioniPrivateUtente
      tags:
        - collezioni
      security:
        - bearerAuth: [ ]
      responses:
        '200':
          description: Lista collezioni di un utente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Collezione'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/GeneralError'
  #3
  '/rest/collezioni/condivise':
    get:
      operationId: getCollezioniCondiviseUtente
      tags:
        - collezioni
      security:
        - bearerAuth: [ ]
      responses:
        '200':
          description: Collezioni condivise con un utente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Collezione'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/GeneralError'
  #4
  '/rest/collezioni/{id_collezione}':
    get:
      operationId: getCollezione
      security:
        - bearerAuth: [ ]
      tags:
        - collezioni
      parameters:
        - name: id_collezione
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Collezione
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collezione'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/GeneralError'
        '404':
          $ref: '#/components/responses/NotFoundError'
  '/rest/collezioni/{id_collezione}/dischi':
    get:
      operationId: getDischiCollezione
      security:
        - bearerAuth: [ ]
      tags:
        - collezioni
      parameters:
        - name: id_collezione
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Lista dischi in una collezione
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Disco'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/GeneralError'
        '404':
          $ref: '#/components/responses/NotFoundError'
  #5
  '/rest/collezioni/{id_collezione}/dischi/{id_disco}':
    get:
      operationId: getDiscoCollezione
      tags:
        - collezioni
      security:
        - bearerAuth: [ ]
      parameters:
        - name: id_collezione
          in: path
          required: true
          schema:
            type: string
        - name: id_disco
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Disco in una collezione
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Disco'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/GeneralError'
  #10
    put:
      operationId: updateDiscoCollezione
      tags:
        - collezioni
      security:
        - bearerAuth: [ ]
      parameters:
        - name: id_collezione
          in: path
          required: true
          schema:
            type: string
        - name: id_disco
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Disco'
      responses:
        '204':
          description: no content
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/GeneralError'
        '404':
          $ref: '#/components/responses/NotFoundError'
  #6
  '/rest/collezioni/{id_collezione}/dischi/':
    post:
      operationId: addDiscoCollezione
      tags:
        - collezioni
      security:
        - bearerAuth: [ ]
      parameters:
        - name: id_collezione
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Disco'
      responses:
        '201':
          description: Aggiunto disco alla collezione
          headers:
            location:
              description: url del disco aggiunto
              schema:
                type: string
                format: uri
          content:
            application/json:
              schema:
                type: string
                format: uri
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/GeneralError'
        '404':
          $ref: '#/components/responses/NotFoundError'
  #7
  '/rest/collezioni/private/dischi':
    get:
        operationId: getDischiUtente
        tags:
            - collezioni
        security:
            - bearerAuth: [ ]
        parameters:
            - name: anno
              in: query
              required: false
              schema:
                  type: integer
            - name: genere
              in: query
              required: false
              schema:
                  $ref: '#/components/schemas/Genere'
            - name: autore
              in: query
              required: false
              schema:
                  type: string
            - name: titolo
              in: query
              required: false
              schema:
                  type: string
            - name: etichetta
              in: query
              required: false
              schema:
                  type: string
        responses:
            '200':
              description: Lista dischi di un utente filtrati
              content:
                application/json:
                  schema:
                      type: array
                      items:
                        $ref: '#/components/schemas/Disco'
            '401':
              $ref: '#/components/responses/UnauthorizedError'
            '500':
              $ref: '#/components/responses/GeneralError'
            '404':
              $ref: '#/components/responses/NotFoundError'
  '/rest/collezioni/dischi':
    get:
      operationId: ricercaDiscoCollezioniPubbliche
      tags:
        - collezioni
      parameters:
        - name: anno
          in: query
          required: false
          schema:
            type: integer
        - name: genere
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/Genere'
        - name: autore
          in: query
          required: false
          schema:
            type: string
        - name: titolo
          in: query
          required: false
          schema:
            type: string
        - name: etichetta
          in: query
          required: false
          schema:
            type: string
        - name: formato
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Lista dischi filtrati
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Disco'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/GeneralError'
        '404':
          $ref: '#/components/responses/NotFoundError'
  '/rest/collezioni/condivise/dischi':
    get:
      operationId: getDischiCondivisiUtente
      tags:
        - collezioni
      security:
        - bearerAuth: [ ]
      parameters:
        - name: anno
          in: query
          required: false
          schema:
            type: integer
        - name: genere
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/Genere'
        - name: autore
          in: query
          required: false
          schema:
            type: string
        - name: titolo
          in: query
          required: false
          schema:
            type: string
        - name: etichetta
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Lista dischi condivisi con un utente filtrati
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Disco'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/GeneralError'
        '404':
          $ref: '#/components/responses/NotFoundError'
  #8
  '/rest/autori':
    get:
      operationId: getAutori
      tags:
          - autori

      responses:
        '200':
          description: Lista di tutti gli autori
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Autore'
        '500':
          $ref: '#/components/responses/GeneralError'
  #9
  '/rest/autori/{id}':
    get:
      operationId: getAutore
      parameters:
        - name: id_autore
          in: query
          required: true
          schema:
            type: integer
      tags:
        - autori
      responses:
        '200':
          description: Autore
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Autore'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/GeneralError'
  '/rest/autori/{id}/dischi':
    get:
      operationId: getDischiByAutore
      parameters:
        - name: id_autore
          in: query
          required: true
          schema:
            type: integer
      tags:
        - autori
      responses:
        '200':
          description: Lista di tutti i dischi di un autore
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Disco'
        '500':
          $ref: '#/components/responses/GeneralError'
        '404':
          $ref: '#/components/responses/NotFoundError'
  #11
  '/rest/stats':
    get:
      operationId: getStats
      tags:
          - stats
      responses:
        '200':
          description: Statistiche
          content:
            application/json:
              schema:
                type: object
                properties:
                  numero_dischi:
                    type: integer
                  numero_autori:
                    type: integer
                  numero_tracce:
                    type: integer
                  numero_etichette:
                    type: integer
                  numero_generi:
                    type: integer
                  numero_collezioni_pubbliche:
                    type: integer
        '500':
          $ref: '#/components/responses/GeneralError'
  '/rest/stats/dischi_per_genere/{genere}':
    get:
      operationId: getDischiPerGenere
      tags:
          - stats
      parameters:
        - name: genere
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Numero di dischi per genere
          content:
            application/json:
              schema:
                type: object
                properties:
                  numero_dischi_per_genere:
                    type: integer
        '500':
          $ref: '#/components/responses/GeneralError'
  '/rest/stats/dischi_per_anno/{anno}':
    get:
      operationId: getDischiPerAnno
      tags:
          - stats
      parameters:
        - name: anno
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Numero di dischi per anno
          content:
            application/json:
              schema:
                type: object
                properties:
                  numero_dischi_per_anno:
                    type: integer
        '500':
          $ref: '#/components/responses/GeneralError'
  '/rest/stats/dischi_per_autore/{autore}':
    get:
      operationId: getDischiPerAutore
      tags:
          - stats
      parameters:
        - name: autore
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Numero di dischi per autore
          content:
            application/json:
              schema:
                type: object
                properties:
                  numero_dischi_per_autore:
                    type: integer
        '500':
          $ref: '#/components/responses/GeneralError'
  '/rest/stats/dischi_per_etichetta/{etichetta}':
    get:
      operationId: getDischiPerEtichetta
      tags:
          - stats
      parameters:
        - name: etichetta
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Numero di dischi per etichetta
          content:
            application/json:
              schema:
                type: object
                properties:
                  numero_dischi_per_etichetta:
                    type: integer
        '500':
          $ref: '#/components/responses/GeneralError'
  '/rest/stats/numero_collezioni_private_utente':
    get:
      operationId: getNumeroCollezioniPrivateUtente
      security:
        - bearerAuth: []
      tags:
          - stats
      responses:
        '200':
          description: Numero di collezioni private di un utente
          content:
            application/json:
              schema:
                type: object
                properties:
                  numero_collezioni_private_utente:
                    type: integer
        '500':
          $ref: '#/components/responses/GeneralError'
  '/rest/stats/numero_collezioni_totali_utente':
    get:
      operationId: getNumeroCollezioniTotaliUtente
      security:
        - bearerAuth: [ ]
      tags:
          - stats
      responses:
        '200':
          description: Numero di collezioni totali di un utente
          content:
            application/json:
              schema:
                type: object
                properties:
                  numero_collezioni_totali_utente:
                    type: integer
        '500':
          $ref: '#/components/responses/GeneralError'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: internalToken
  responses:
    GeneralError:
      description: errore generale
      content:
        text/plain:
          schema:
            type: string
            example: "Messaggio di Errore"
    UnauthorizedError:
      description: bearer token mancante o non valido
    NotFoundError:
      description: elemento non trovato
      content:
        text/plain:
          schema:
            type: string
            example: "Elemento inesistente"
    BadRequest:
        description: richiesta non valida
        content:
            text/plain:
              schema:
                type: string
                example: "Richiesta non valida"
    Forbidden:
        description: operazione non permessa
        content:
            text/plain:
              schema:
                type: string
                example: "Operazione non permessa"
  schemas:
    Collezione:
      type: object
      properties:
        id:
          type: integer
          format: int32
          readOnly: true
        titolo:
          type: string
          example: "Titolo Collezione"
        privacy:
          type: string
          example: "PRIVATO"
        dataCreazione:
          type: string
          format: date
          readOnly: true
        dischi:
          type: string
          format: uri


    Disco:
      type: object
      properties:
        id:
          type: integer
          format: int32
          readOnly: true
        titolo:
          type: string
          example: "Titolo Disco"
        anno:
          type: integer
          example: 2022
        genere:
          $ref: '#/components/schemas/Genere'
        etichetta:
          type: string
          example: "Etichetta"
        barcode:
          type: string
          example: "978020137962"
        stato_conservazione:
          $ref: '#/components/schemas/StatoConservazione'
        formato:
          $ref: '#/components/schemas/Formato'
        dataCreazione:
          type: string
          format: date
          readOnly: true
        padre:
          type: string
          format: uri

    Autore:
        type: object
        properties:
          id:
            type: integer
            format: int32
            readOnly: true
          nome:
            type: string
            example: "Albano"
          cognome:
            type: string
            example: "Carrisi"
          nome_artistico:
            type: string
            example: "Al Bano"
          tipologia:
            $ref: '#/components/schemas/Tipologia'
    Genere:
      type: string
      enum:
        - POP
        - ROCK
        - JAZZ
        - CLASSIC
        - METAL
        - RAP
        - BLUES
        - PUNK
        - REGGAE
        - COUNTRY
        - HIPHOP
        - ELECTRONIC
        - OTHER
    StatoConservazione:
      type: string
      enum:
        - NUOVO
        - BUONO
        - USATO
        - SCARSO
        - ROTTO
    Tipologia:
      type: string
      enum:
        - COMPOSITORE
        - CANTANTE
        - MUSICISTA
    Formato:
      type: string
      enum:
        - CD
        - VINILE
        - DIGITAL